name: Build & Publish Docker Image to AWS ECR

on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"

env:
  CARGO_TERM_COLOR: always
  DOCKER_BUILDKIT: 1
  RUSTFLAGS: -D warnings
  REGISTRY: 756756437019.dkr.ecr.us-west-2.amazonaws.com/fuel-core

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      # Build caching action
      - uses: Swatinem/rust-cache@v1

      - name: Install rustfmt
        run: rustup component add rustfmt

      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --verbose -- --check

      - name: Check build
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --verbose --all-targets

      - name: Check Clippy Lints
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --verbose --all-targets

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --all-targets

  buil_and_publish_image:
    needs: build
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            ${{ env.REGISTRY }}
          tags: |
            type=sha
            type=ref,event=branch
            type=ref,event=tag
          flavor: |
            latest=${{ github.ref == 'refs/heads/master' }}

      - name: Build and push Docker image to AWS ECR
        uses: docker/build-push-action@v2
        with:
          context: .
          file: deployment/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
